# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(925, 648)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/img/galaxy.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 925, 22))
        self.menubar.setObjectName("menubar")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menu_Export = QtWidgets.QMenu(self.menubar)
        self.menu_Export.setObjectName("menu_Export")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.toolBar.setIconSize(QtCore.QSize(32, 32))
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        self.actionRedo.setObjectName("actionRedo")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.actionZoom_In = QtWidgets.QAction(MainWindow)
        self.actionZoom_In.setObjectName("actionZoom_In")
        self.actionZoom_Out = QtWidgets.QAction(MainWindow)
        self.actionZoom_Out.setObjectName("actionZoom_Out")
        self.actionZoom_Default = QtWidgets.QAction(MainWindow)
        self.actionZoom_Default.setObjectName("actionZoom_Default")
        self.actionNewWindow = QtWidgets.QAction(MainWindow)
        self.actionNewWindow.setObjectName("actionNewWindow")
        self.actionNewFreeDrawing = QtWidgets.QAction(MainWindow)
        self.actionNewFreeDrawing.setObjectName("actionNewFreeDrawing")
        self.actionBack = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/img/navigate_back.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBack.setIcon(icon1)
        self.actionBack.setObjectName("actionBack")
        self.actionForward = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/img/navigate_forward.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionForward.setIcon(icon2)
        self.actionForward.setObjectName("actionForward")
        self.actionCloseWindow = QtWidgets.QAction(MainWindow)
        self.actionCloseWindow.setObjectName("actionCloseWindow")
        self.actionPlace_Arrow = QtWidgets.QAction(MainWindow)
        self.actionPlace_Arrow.setCheckable(True)
        self.actionPlace_Arrow.setChecked(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/img/arrow.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPlace_Arrow.setIcon(icon3)
        self.actionPlace_Arrow.setObjectName("actionPlace_Arrow")
        self.actionEdit_Text = QtWidgets.QAction(MainWindow)
        self.actionEdit_Text.setCheckable(True)
        self.actionEdit_Text.setChecked(True)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/img/letter_T.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Text.setIcon(icon4)
        self.actionEdit_Text.setObjectName("actionEdit_Text")
        self.actionLaTeX_to_unicode = QtWidgets.QAction(MainWindow)
        self.actionLaTeX_to_unicode.setCheckable(True)
        self.actionLaTeX_to_unicode.setChecked(True)
        self.actionLaTeX_to_unicode.setObjectName("actionLaTeX_to_unicode")
        self.actionBook_Lookup = QtWidgets.QAction(MainWindow)
        self.actionBook_Lookup.setCheckable(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/img/book_lookup.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBook_Lookup.setIcon(icon5)
        self.actionBook_Lookup.setObjectName("actionBook_Lookup")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionApplication_font = QtWidgets.QAction(MainWindow)
        self.actionApplication_font.setCheckable(False)
        self.actionApplication_font.setChecked(False)
        self.actionApplication_font.setObjectName("actionApplication_font")
        self.actionGraphics_Debugger = QtWidgets.QAction(MainWindow)
        self.actionGraphics_Debugger.setCheckable(True)
        self.actionGraphics_Debugger.setIcon(icon)
        self.actionGraphics_Debugger.setObjectName("actionGraphics_Debugger")
        self.actionCollision_response = QtWidgets.QAction(MainWindow)
        self.actionCollision_response.setCheckable(True)
        self.actionCollision_response.setChecked(True)
        self.actionCollision_response.setObjectName("actionCollision_response")
        self.actionText_Collision_response = QtWidgets.QAction(MainWindow)
        self.actionText_Collision_response.setCheckable(True)
        self.actionText_Collision_response.setObjectName("actionText_Collision_response")
        self.actionFunctor = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/img/functor_of_dot.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFunctor.setIcon(icon6)
        self.actionFunctor.setObjectName("actionFunctor")
        self.blankSpace = QtWidgets.QAction(MainWindow)
        self.blankSpace.setText("")
        self.blankSpace.setObjectName("blankSpace")
        self.blankSpace_2 = QtWidgets.QAction(MainWindow)
        self.blankSpace_2.setText("")
        self.blankSpace_2.setObjectName("blankSpace_2")
        self.actionNewProof = QtWidgets.QAction(MainWindow)
        self.actionNewProof.setObjectName("actionNewProof")
        self.actionCloseEntireApp = QtWidgets.QAction(MainWindow)
        self.actionCloseEntireApp.setObjectName("actionCloseEntireApp")
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionDelete)
        self.menuView.addAction(self.actionZoom_In)
        self.menuView.addAction(self.actionZoom_Out)
        self.menuView.addAction(self.actionZoom_Default)
        self.menuOptions.addAction(self.actionApplication_font)
        self.menuOptions.addAction(self.actionCollision_response)
        self.menuOptions.addAction(self.actionText_Collision_response)
        self.menu.addAction(self.actionNewProof)
        self.menu.addSeparator()
        self.menu.addAction(self.actionNewFreeDrawing)
        self.menu.addAction(self.actionNewWindow)
        self.menu.addAction(self.actionOpen)
        self.menu.addSeparator()
        self.menu.addAction(self.actionSave)
        self.menu.addAction(self.actionSaveAs)
        self.menu.addSeparator()
        self.menu.addAction(self.actionCloseWindow)
        self.menu.addAction(self.actionCloseEntireApp)
        self.menuHelp.addAction(self.actionGraphics_Debugger)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())
        self.menubar.addAction(self.menu_Export.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionBack)
        self.toolBar.addAction(self.actionForward)
        self.toolBar.addAction(self.blankSpace_2)
        self.toolBar.addAction(self.actionBook_Lookup)
        self.toolBar.addAction(self.actionEdit_Text)
        self.toolBar.addAction(self.actionPlace_Arrow)
        self.toolBar.addAction(self.blankSpace)
        self.toolBar.addAction(self.actionFunctor)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Abstract Spacecraft v0.0"))
        self.menuEdit.setTitle(_translate("MainWindow", "&Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuOptions.setTitle(_translate("MainWindow", "&Options"))
        self.menu.setTitle(_translate("MainWindow", "&File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menu_Export.setTitle(_translate("MainWindow", "&Export"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionDelete.setShortcut(_translate("MainWindow", "Del"))
        self.actionZoom_In.setText(_translate("MainWindow", "Zoom In"))
        self.actionZoom_In.setShortcut(_translate("MainWindow", "Ctrl+="))
        self.actionZoom_Out.setText(_translate("MainWindow", "Zoom Out"))
        self.actionZoom_Out.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.actionZoom_Default.setText(_translate("MainWindow", "Zoom Default"))
        self.actionZoom_Default.setShortcut(_translate("MainWindow", "Ctrl+0"))
        self.actionNewWindow.setText(_translate("MainWindow", "New &Window"))
        self.actionNewWindow.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionNewFreeDrawing.setText(_translate("MainWindow", "New &Free Drawing"))
        self.actionNewFreeDrawing.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionBack.setText(_translate("MainWindow", "Navigate back"))
        self.actionBack.setToolTip(_translate("MainWindow", "Back   Ctrl+Backspace"))
        self.actionBack.setShortcut(_translate("MainWindow", "Ctrl+Backspace"))
        self.actionForward.setText(_translate("MainWindow", "Navigate forward"))
        self.actionForward.setToolTip(_translate("MainWindow", "Forward   Ctrl+Space"))
        self.actionForward.setShortcut(_translate("MainWindow", "Ctrl+Space"))
        self.actionCloseWindow.setText(_translate("MainWindow", "&Close Window"))
        self.actionPlace_Arrow.setText(_translate("MainWindow", "Place Arrows"))
        self.actionPlace_Arrow.setToolTip(_translate("MainWindow", "Place arrows instead of nodes.   Alt+A"))
        self.actionPlace_Arrow.setShortcut(_translate("MainWindow", "Alt+A"))
        self.actionEdit_Text.setText(_translate("MainWindow", "Edit Text"))
        self.actionEdit_Text.setToolTip(_translate("MainWindow", "Double-click text to edit it.   Alt+T"))
        self.actionEdit_Text.setShortcut(_translate("MainWindow", "Alt+T"))
        self.actionLaTeX_to_unicode.setText(_translate("MainWindow", "LaTeX to unicode"))
        self.actionBook_Lookup.setText(_translate("MainWindow", "Book Lookup"))
        self.actionBook_Lookup.setToolTip(_translate("MainWindow", "Double-click looks up item in the library."))
        self.actionBook_Lookup.setShortcut(_translate("MainWindow", "Alt+L"))
        self.actionSave.setText(_translate("MainWindow", "&Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveAs.setText(_translate("MainWindow", "Save &As..."))
        self.actionOpen.setText(_translate("MainWindow", "&Open..."))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionApplication_font.setText(_translate("MainWindow", "Application font..."))
        self.actionGraphics_Debugger.setText(_translate("MainWindow", "Graphics Debugger"))
        self.actionGraphics_Debugger.setShortcut(_translate("MainWindow", "Alt+D"))
        self.actionCollision_response.setText(_translate("MainWindow", "Collision response"))
        self.actionText_Collision_response.setText(_translate("MainWindow", "Text Collision response"))
        self.actionFunctor.setText(_translate("MainWindow", "F(.)"))
        self.actionFunctor.setToolTip(_translate("MainWindow", "Take Functorial Image Ctrl+F"))
        self.actionFunctor.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionNewProof.setText(_translate("MainWindow", "New &Proof"))
        self.actionCloseEntireApp.setText(_translate("MainWindow", "Close &Entire App"))
import resources_rc
