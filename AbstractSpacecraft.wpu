#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.show-args-dialog = {loc('abstract_spacecraft.py'): False,
                          loc('kernel.py'): False,
                          loc('lang/parser.py'): False,
                          loc('lang/tools.py'): False,
                          loc('prime_explorer.py'): False,
                          loc('prime_twins.py'): False,
                          loc('twin_primes.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dPDc9Bo614ovTUINL6aKbnEvpe4MvKfd',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25263157894736843,
                 'override_title': None,
                 'pagelist': [('source-assistant',
                               'tall',
                               0,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,),
        (4,),
        (7,),
        (11,)],
                                 'selected-nodes': [(4,
        10)],
                                 'top-node': (1,
        7)}},
        'tree-style': 'deep'}}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../../Python39/Lib/distutils/dir_util.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python39/Lib/distutils/dir_util.py'),
                      'copy_tree')]},
        loc('../../../../../Python39/Lib/genericpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python39/Lib/genericpath.py'),
                      'commonprefix')]},
        loc('../../../../../Python39/Lib/json/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Python39/Lib/json/decoder.py'),
                      '')]},
        loc('../../../../../Python39/Lib/json/decoder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Python39/Lib/json/decoder.py'),
                      'BACKSLASH')]},
        loc('../../../../../Python39/Lib/os.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Program Files (x86)/Wing Pro 7.2/resources/typeshed/stdlib/3/os/__init__.pyi'),
                      'abort')]},
        loc('../../../../../Python39/Lib/pathlib.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Python39/Lib/pathlib.py'),
                      'Path')]},
        loc('../../QuiverDB/bootstrap-studio-to-django-template/bootstrap-studio-to-django-template.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/bootstrap-studio-to-django-template/django_export.sh'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bootstrap-studio-to-django-template.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bootstrap-studio-to-django-template.py'),
                      'config')]},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bss_converter/file_manager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bss_converter/file_manager.py'),
                      'FileManager')]},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bss_converter/tag_converter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bss_converter/tag_converter.py'),
                      'error_exit')]},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bss_export_dest/accounts/sign_up.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/bss_export_dest/quiver_database/signup_page.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/community_asked_features.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/configuration.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/converter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/django_export.sh'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/exe_build_output/bss_export_dest/quiver_database/signup_page.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/exe_build_output/configuration.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bootstrap-studio-to-django-template/requirements.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bss-export-destination/index.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/bss-export-destination/quiver_database/signup_page.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/quiver_database/templates/accounts/sign_up.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../QuiverDB/quiver-database/quiver_database/templates/quiver_database/signup_page.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('control_point.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('class def',
        loc('control_point.py'),
        'ControlPoint')]],
                                  'top-node': [('class def',
        loc('control_point.py'),
        'ControlPoint')]},
        loc('diagram_name_dialog.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('diagram_name_dialog.py'),
                             'DiagramNameDialog')]],
        'top-node': [('class def',
                      loc('diagram_name_dialog.py'),
                      'DiagramNameDialog')]},
        loc('language_canvas.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('class def',
        loc('language_canvas.py'),
        'LanguageCanvas')]},
        loc('language_view.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('class def',
        loc('language_view.py'),
        'LanguageView')]],
                                  'top-node': [('class def',
        loc('language_view.py'),
        'LanguageView')]},
        loc('language_view_tabs.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('language_view_tabs.py'),
        'LanguageViewTabs')]},
        loc('library_action_dialog.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('library_action_dialog.py'),
                      'LibraryActionDialog')]},
        loc('mainwindow.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('class def',
        loc('mainwindow.py'),
        'MainWindow')]},
        loc('twin_primes.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('twin_primes.py'),
        'N')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('refactoring',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4],
        'notebook_display': 'normal',
        'notebook_percent': 0.4509803921568627,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'setSceneRect',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'app.inst',
                                       'fReverse': False,
                                       'fSearchText': 'self._html = None',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      0,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('gfx/diagram_listing.py'),
        {'attrib-starts': [('DiagramListing|0|',
                            9),
                           ('DiagramListing|0|.__init__|0|',
                            13)],
         'code-line': '      diagram_view.tab_name_changed.connect(self.diagramTitleLabel.setText)\r\n',
         'first-line': 9,
         'folded-linenos': [],
         'sel-line': 22,
         'sel-line-start': 923,
         'selection_end': 998,
         'selection_start': 997,
         'zoom': 0},
        1663649157.9403017],
        [loc('gfx/logical_rule_listing.py'),
         {'attrib-starts': [('LogicalRuleListing|0|',
                             3),
                            ('LogicalRuleListing|0|.__init__|0|',
                             4)],
          'code-line': '      self.ruleTitleLabel.setLabel(rule_view.tab_name)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 347,
          'selection_end': 401,
          'selection_start': 401,
          'zoom': 0},
         1663649360.595086],
        [loc('gfx/diagram_listing.py'),
         {'attrib-starts': [('DiagramListing|0|',
                             9),
                            ('DiagramListing|0|.__init__|0|',
                             13)],
          'code-line': '      diagram_view.tab_name_changed.connect(self.diagramTitleLabel.setText)\r\n',
          'first-line': 9,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 923,
          'selection_end': 998,
          'selection_start': 929,
          'zoom': 0},
         1663649370.6625285],
        [loc('gfx/language_canvas.py'),
         {'attrib-starts': [('LanguageCanvas|0|',
                             22),
                            ('LanguageCanvas|0|.mouseDoubleClickEvent|0|',
                             99)],
          'code-line': '                    T.setPos(item.mapFromScene(event.scenePos()))\n',
          'first-line': 208,
          'folded-linenos': [],
          'sel-line': 119,
          'sel-line-start': 4872,
          'selection_end': 4937,
          'selection_start': 4937,
          'zoom': 0},
         1663649372.275221],
        [loc('gfx/logical_rule_listing.py'),
         {'attrib-starts': [('LogicalRuleListing|0|',
                             3),
                            ('LogicalRuleListing|0|.__init__|0|',
                             4)],
          'code-line': '      rule_view.tab_name_changed.connect(self.ruleTitleLabel.setText)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 402,
          'selection_end': 402,
          'selection_start': 402,
          'zoom': 0},
         1663649592.2266839],
        [loc('gfx/language_listing.py'),
         {'attrib-starts': [],
          'code-line': 'from PyQt5.QtWidgets import QWidget, QApplication\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1663649597.8047202],
        [loc('gfx/language_gfx_view.py'),
         {'attrib-starts': [('LanguageGfxView|0|',
                             10),
                            ('LanguageGfxView|0|.__getstate__|0|',
                             38)],
          'code-line': "        data['name'] = self._name\r\n",
          'first-line': 32,
          'folded-linenos': [],
          'sel-line': 46,
          'sel-line-start': 1711,
          'selection_end': 1711,
          'selection_start': 1711,
          'zoom': 0},
         1663649603.8005917],
        [loc('gfx/language_gfx_view.py'),
         {'attrib-starts': [('LanguageGfxView|0|',
                             10),
                            ('LanguageGfxView|0|.__getstate__|0|',
                             38)],
          'code-line': "        data['name'] = self._name\r\n",
          'first-line': 122,
          'folded-linenos': [],
          'sel-line': 46,
          'sel-line-start': 1711,
          'selection_end': 1711,
          'selection_start': 1711,
          'zoom': 0},
         1663649605.2228274],
        [loc('gfx/language_gfx_view.py'),
         {'attrib-starts': [('LanguageGfxView|0|',
                             10)],
          'code-line': '    def set_tab_name(self, name:str):\r\n',
          'first-line': 47,
          'folded-linenos': [],
          'sel-line': 60,
          'sel-line-start': 2011,
          'selection_end': 2161,
          'selection_start': 2011,
          'zoom': 0},
         1663649613.8993862],
        [loc('gfx/language_gfx_view.py'),
         {'attrib-starts': [('LanguageGfxView|0|',
                             10)],
          'code-line': '    def set_tab_name(self, name:str):\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 60,
          'sel-line-start': 2011,
          'selection_end': 2161,
          'selection_start': 2011,
          'zoom': 0},
         1663649618.2848277],
        [loc('gfx/logical_rule_listing.py'),
         {'attrib-starts': [],
          'code-line': 'class LogicalRuleListing(LanguageListing, Ui_LogicalRuleListing):\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 3,
          'sel-line-start': 114,
          'selection_end': 179,
          'selection_start': 179,
          'zoom': 0},
         1663649638.3250651],
        [loc('gfx/logical_rule_view.py'),
         {'attrib-starts': [('LogicalRuleView|0|',
                             9),
                            ('LogicalRuleView|0|.contextMenuEvent|0|',
                             133)],
          'code-line': '      menu.exec_(self.mapToGlobal(event.pos()))\r\n',
          'first-line': 116,
          'folded-linenos': [],
          'sel-line': 139,
          'sel-line-start': 5237,
          'selection_end': 5284,
          'selection_start': 5284,
          'zoom': 0},
         1663649642.5436244],
        [loc('gfx/logical_rule_view.py'),
         {'attrib-starts': [],
          'code-line': 'from PyQt5.QtCore import pyqtSignal\r\n',
          'first-line': 66,
          'folded-linenos': [],
          'sel-line': 8,
          'sel-line-start': 394,
          'selection_end': 429,
          'selection_start': 429,
          'zoom': 0},
         1663649669.7030845],
        [loc('gfx/logical_rule_view.py'),
         {'attrib-starts': [],
          'code-line': 'class LogicalRuleView(QWidget, Ui_LogicalRuleView):\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 433,
          'selection_end': 454,
          'selection_start': 439,
          'zoom': 0},
         1663649727.3647442],
        [loc('gfx/logical_rule_listing.py'),
         {'attrib-starts': [('LogicalRuleListing|0|',
                             3),
                            ('LogicalRuleListing|0|.__init__|0|',
                             4)],
          'code-line': '      self.removeButton.clicked.connect(\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 11,
          'sel-line-start': 473,
          'selection_end': 513,
          'selection_start': 513,
          'zoom': 0},
         1663649938.3361328],
        [loc('gfx/diagram_listing.py'),
         {'attrib-starts': [('DiagramListing|0|',
                             9)],
          'code-line': '   refresh_wait_interval_ms = 1500\r\n',
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 445,
          'selection_end': 479,
          'selection_start': 479,
          'zoom': 0},
         1663649963.6602845],
        [loc('gfx/language_listing.py'),
         {'attrib-starts': [],
          'code-line': 'from PyQt5.QtWidgets import QWidget, QApplication\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1663649964.663788],
        [loc('gfx/logical_rule_listing.py'),
         {'attrib-starts': [('LogicalRuleListing|0|',
                             3),
                            ('LogicalRuleListing|0|.__init__|0|',
                             4)],
          'code-line': '      self.editButton.clicked.connect(\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 12,
          'sel-line-start': 542,
          'selection_end': 580,
          'selection_start': 580,
          'zoom': 0},
         1663649992.1024125],
        (loc('gfx/diagram_listing.py'),
         {'attrib-starts': [('DiagramListing|0|',
                             9)],
          'code-line': '   def navigate_to_diagram(self):\r\n',
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1605,
          'selection_end': 1791,
          'selection_start': 1605,
          'zoom': 0},
         1663650009.7894466),
        (loc('widget/language_view_tabs.py'),
         {'attrib-starts': [('LanguageViewTabs|0|',
                             7),
                            ('LanguageViewTabs|0|.show_tab_rename_dialog|0|',
                             11)],
          'code-line': '            \r\n',
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 785,
          'selection_end': 797,
          'selection_start': 797,
          'zoom': 0},
         1663650010.650823),
        (loc('gfx/logical_rule_listing.py'),
         {'attrib-starts': [('LogicalRuleListing|0|',
                             3),
                            ('LogicalRuleListing|0|.__init__|0|',
                             4)],
          'code-line': '      self.editButton.clicked.connect(self.navigate_to_\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 12,
          'sel-line-start': 542,
          'selection_end': 597,
          'selection_start': 597,
          'zoom': 0},
         1663650021.3356526)],
        20),
        'current-loc': loc('gfx/logical_rule_listing.py'),
        'editor-state-list': [(loc('gfx/diagram_listing.py'),
                               {'attrib-starts': [('DiagramListing|0|',
        9)],
                                'code-line': '   def navigate_to_diagram(self):\r\n',
                                'first-line': 21,
                                'folded-linenos': [],
                                'sel-line': 38,
                                'sel-line-start': 1605,
                                'selection_end': 1791,
                                'selection_start': 1605,
                                'zoom': 0}),
                              (loc('gfx/language_gfx_view.py'),
                               {'attrib-starts': [('LanguageGfxView|0|',
        10)],
                                'code-line': '    def set_tab_name(self, name:str):\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 60,
                                'sel-line-start': 2011,
                                'selection_end': 2161,
                                'selection_start': 2011,
                                'zoom': 0}),
                              (loc('gfx/language_listing.py'),
                               {'attrib-starts': [('LanguageListing|0|',
        3)],
                                'code-line': '   remove_requested = pyqtSignal()\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 5,
                                'sel-line-start': 165,
                                'selection_end': 199,
                                'selection_start': 199,
                                'zoom': 0}),
                              (loc('widget/language_view_tabs.py'),
                               {'attrib-starts': [('LanguageViewTabs|0|',
        7),
        ('LanguageViewTabs|0|.show_tab_rename_dialog|0|',
         11)],
                                'code-line': '            \r\n',
                                'first-line': 6,
                                'folded-linenos': [],
                                'sel-line': 20,
                                'sel-line-start': 785,
                                'selection_end': 797,
                                'selection_start': 797,
                                'zoom': 0}),
                              (loc('gfx/logical_rule_listing.py'),
                               {'attrib-starts': [('LogicalRuleListing|0|',
        3),
        ('LogicalRuleListing|0|.navigate_to_logical_rule|0|',
         14)],
                                'code-line': '         self._ruleView.window().set_current_language_view(self._ruleView)      \r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 17,
                                'sel-line-start': 729,
                                'selection_end': 798,
                                'selection_start': 798,
                                'zoom': 0}),
                              (loc('gfx/logical_rule_view.py'),
                               {'attrib-starts': [],
                                'code-line': 'class LogicalRuleView(QWidget, Ui_LogicalRuleView):\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 10,
                                'sel-line-start': 433,
                                'selection_end': 454,
                                'selection_start': 439,
                                'zoom': 0}),
                              (loc('dialog/mainwindow.py'),
                               {'attrib-starts': [('MainWindow|0|',
        17),
        ('MainWindow|0|.add_language_view|0|',
         125)],
                                'code-line': '        widget = QWidget()\n',
                                'first-line': 117,
                                'folded-linenos': [],
                                'sel-line': 132,
                                'sel-line-start': 6835,
                                'selection_end': 6861,
                                'selection_start': 6861,
                                'zoom': 0}),
                              (loc('gfx/text.py'),
                               {'attrib-starts': [('Text|0|',
        14),
        ('Text|0|.keyPressEvent|0|',
         95)],
                                'code-line': '        self.update()\r\n',
                                'first-line': 83,
                                'folded-linenos': [],
                                'sel-line': 101,
                                'sel-line-start': 4357,
                                'selection_end': 4378,
                                'selection_start': 4357,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('gfx/diagram_listing.py'),
         loc('gfx/language_gfx_view.py'),
         loc('gfx/language_listing.py'),
         loc('widget/language_view_tabs.py'),
         loc('gfx/logical_rule_listing.py'),
         loc('gfx/logical_rule_view.py'),
         loc('dialog/mainwindow.py'),
         loc('gfx/text.py')]),
                               'open_files': ['dialog/mainwindow.py',
        'gfx/text.py',
        'gfx/language_gfx_view.py',
        'gfx/logical_rule_view.py',
        'gfx/language_listing.py',
        'gfx/diagram_listing.py',
        'widget/language_view_tabs.py',
        'gfx/logical_rule_listing.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.2510460251046025},
        'splits': 1,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           4),
                          1663649573.1297212),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    1),
                                   1663649128.7541156),
                 'user_data': {}},
        'window-alloc': (773,
                         0,
                         1147,
                         1040)}]}
guimgr.recent-documents = [loc('gfx/logical_rule_listing.py'),
                           loc('widget/language_view_tabs.py'),
                           loc('gfx/diagram_listing.py'),
                           loc('gfx/language_listing.py'),
                           loc('gfx/logical_rule_view.py'),
                           loc('gfx/language_gfx_view.py'),
                           loc('gfx/text.py'),
                           loc('dialog/mainwindow.py')]
guimgr.visual-state = {loc('../../../../../Python310/lib/site-packages/bidict/_base.py'): {'attrib-starts': [('BidictBase|0|',
        60),
        ('BidictBase|0|._dedup|0|',
         306)],
        'code-line': '                raise ValueDuplicationError(val)\n',
        'first-line': 335,
        'folded-linenos': [],
        'sel-line': 349,
        'sel-line-start': 14950,
        'selection_end': 14950,
        'selection_start': 14950,
        'zoom': 0},
                       loc('../../../../../Python38/lib/site-packages/sympy/ntheory/generate.py'): {'attrib-starts': [('prime|0|',
        351)],
        'code-line': '        raise ValueError("nth must be a positive integer; prime(1) == 2")\n',
        'first-line': 390,
        'folded-linenos': [],
        'sel-line': 402,
        'sel-line-start': 12233,
        'selection_end': 12233,
        'selection_start': 12233,
        'zoom': 0},
                       loc('../../../../../Python39/Lib/site-packages/lark/load_grammar.py'): {'attrib-starts': [('GrammarBuilder|0|',
        1058),
        ('GrammarBuilder|0|._grammar_error|0|',
         1072)],
        'code-line': '        raise GrammarError(msg.format(**args))\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1079,
        'sel-line-start': 38531,
        'selection_end': 38531,
        'selection_start': 38531,
        'zoom': 0},
                       loc('../../BananaCats/complex_number_plotting.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../BananaCats/definable.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../BananaCats/serialized_standard_form.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../BananaCats/trie.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../abstract_spacecraft/quiver/src/index.html'): {'attrib-starts': [],
        'code-line': '    <link rel="preload" href="icons/delete.svg" as="image">\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 1178,
        'selection_end': 1237,
        'selection_start': 1237,
        'zoom': 0},
                       loc('../quiverdatabase/QuiverDatabase/neo4j_tools.py'): {'attrib-starts': [('escape_regex_str|0|',
        2)],
        'code-line': 'def escape_regex_str(string):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 2,
        'selection_end': 349,
        'selection_start': 2,
        'zoom': 0},
                       loc('abstract_spacecraft.py'): {'attrib-starts': [],
        'code-line': "    app.setStyle('macintosh')  # TODO remove or put as option / what are other styles?\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 214,
        'selection_end': 241,
        'selection_start': 241,
        'zoom': 0},
                       loc('arrow.py'): {'attrib-starts': [('Arrow|0|',
        23),
        ('Arrow|0|.__init__|0|',
         49)],
        'code-line': '        self.setFlag(self.ItemIsMovable, False)\n',
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 66,
        'sel-line-start': 2767,
        'selection_end': 2814,
        'selection_start': 2814,
        'zoom': 0},
                       loc('color_fillable.py'): {'attrib-starts': [('ColorFillable|0|',
        6)],
        'code-line': '    def _getState(self, data:dict):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 621,
        'selection_end': 656,
        'selection_start': 656,
        'zoom': 0},
                       loc('combo_box_dialog.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtWidgets import QDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('complex_number_plotting.py'): {'attrib-starts': [],
        'code-line': 'from mpl_toolkits.mplot3d import Axes3D\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('control_point.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtCore import QPointF, Qt, QRectF, pyqtSignal\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('core/app.py'): {'attrib-starts': [('App|0|',
        11),
        ('App|0|.setFont|0|',
         44)],
        'code-line': '                langView.set_font(font, memo)\r\n',
        'first-line': 145,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 1567,
        'selection_end': 1612,
        'selection_start': 1612,
        'zoom': 0},
                       loc('core/geom_tools.py'): {'attrib-starts': [],
        'code-line': 'from core.qt_tools import simple_max_contrasting_color, Pen\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 269,
        'selection_end': 279,
        'selection_start': 279,
        'zoom': 0},
                       loc('core/library_compiler_thread.py'): {'attrib-starts': [('LibraryCompilerThread|0|',
        6),
        ('LibraryCompilerThread|0|.run|0|',
         13)],
        'code-line': '            documents = app.documents_from_data_file(filename)\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 489,
        'selection_end': 489,
        'selection_start': 489,
        'zoom': 4},
                       loc('core/networkx_tools.py'): {'attrib-starts': [],
        'code-line': 'from gfx.text import Text\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 189,
        'selection_end': 198,
        'selection_start': 198,
        'zoom': 0},
                       loc('core/undo_cmd.py'): {'attrib-starts': [('AddText|0|',
        33),
        ('AddText|0|.redo|0|',
         40)],
        'code-line': '        #self._text.bbox_collision_response()\n',
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 45,
        'sel-line-start': 1360,
        'selection_end': 1405,
        'selection_start': 1405,
        'zoom': 0},
                       loc('core/variable_template_regex.py'): {'attrib-starts': [('VariableTemplateRegex|0|',
        4),
        ('VariableTemplateRegex|0|.__init__|0|',
         8)],
        'code-line': '        var_count = len(var_index)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 369,
        'selection_end': 402,
        'selection_start': 402,
        'zoom': 0},
                       loc('debug_widget.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtWidgets import QWidget\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('deductive_system.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('deletable.py'): {'attrib-starts': [('Deletable|0|',
        3),
        ('Deletable|0|.deletable_by_user|0|',
         17)],
        'code-line': '    \r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 529,
        'selection_end': 533,
        'selection_start': 533,
        'zoom': 0},
                       loc('dialog/canvas_grid_dialog.py'): {'attrib-starts': [],
        'code-line': 'from ui.ui_canvas_grid_dialog import Ui_CanvasGridDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 87,
        'selection_end': 96,
        'selection_start': 96,
        'zoom': 0},
                       loc('dialog/combo_box_dialog.py'): {'attrib-starts': [],
        'code-line': 'from ui.ui_combo_box_dialog import Ui_ComboBoxDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 37,
        'selection_end': 45,
        'selection_start': 45,
        'zoom': 0},
                       loc('dialog/diagram_name_dialog.py'): {'attrib-starts': [],
        'code-line': 'from ui.ui_diagram_name_dialog import Ui_DiagramNameDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 37,
        'selection_end': 45,
        'selection_start': 45,
        'zoom': 0},
                       loc('dialog/double_spin_dialog.py'): {'attrib-starts': [],
        'code-line': 'from ui.ui_double_spin_dialog import Ui_DoubleSpinDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 37,
        'selection_end': 45,
        'selection_start': 45,
        'zoom': 0},
                       loc('dialog/font_dialog.py'): {'attrib-starts': [],
        'code-line': 'from ui.ui_font_dialog import Ui_FontDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 8,
        'selection_start': 8,
        'zoom': 0},
                       loc('dialog/integer_spin_dialog.py'): {'attrib-starts': [],
        'code-line': 'from ui.ui_integer_spin_dialog import Ui_IntegerSpinDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 37,
        'selection_end': 45,
        'selection_start': 45,
        'zoom': 0},
                       loc('dialog/library_action_dialog.py'): {'attrib-starts': [('LibraryActionDialog|0|',
        5),
        ('LibraryActionDialog|0|.new_diagram_button_clicked|0|',
         15)],
        'code-line': '      \r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 681,
        'selection_end': 687,
        'selection_start': 687,
        'zoom': 0},
                       loc('dialog/mainwindow.py'): {'attrib-starts': [('MainWindow|0|',
        17)],
        'code-line': '    def language_views(self):\n',
        'first-line': 157,
        'folded-linenos': [],
        'sel-line': 177,
        'sel-line-start': 8474,
        'selection_end': 8496,
        'selection_start': 8482,
        'zoom': 0},
                       loc('dialog/set_definition_dialog.py'): {'attrib-starts': [('SetDefinitionDialog|0|',
        5),
        ('SetDefinitionDialog|0|.ok_clicked|0|',
         15)],
        'code-line': '            app.link_requester.set_link((self.externalUrlLine.text(), self.externalLinkTextLine.text()))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 786,
        'selection_end': 890,
        'selection_start': 890,
        'zoom': 0},
                       loc('drag_droppable.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtCore import *\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('feature_list.txt'): {'attrib-starts': [],
        'code-line': '      Use <sub> / <sup> tags for subscripts / superscripts\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 375,
        'selection_end': 579,
        'selection_start': 433,
        'zoom': 0},
                       loc('gfx/arrow.py'): {'attrib-starts': [('Arrow|0|',
        23),
        ('Arrow|0|.paint|0|',
         640)],
        'code-line': '            paint_selection_shape(painter, self.arrow_style.selection_path, self.transform(),\n',
        'first-line': 412,
        'folded-linenos': [],
        'sel-line': 642,
        'sel-line-start': 24674,
        'selection_end': 24748,
        'selection_start': 24748,
        'zoom': 0},
                       loc('gfx/arrow_style.py'): {'attrib-starts': [('ArrowStyle|0|',
        34),
        ('ArrowStyle|0|.update_selection_path|0|',
         365)],
        'code-line': '        self._selectionPath = stroker.createStroke(self.paint_path)\n',
        'first-line': 347,
        'folded-linenos': [],
        'sel-line': 368,
        'sel-line-start': 11600,
        'selection_end': 11600,
        'selection_start': 11600,
        'zoom': 0},
                       loc('gfx/bounded.py'): {'attrib-starts': [],
        'code-line': 'from core.geom_tools import closest_point_on_path\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 67,
        'selection_end': 116,
        'selection_start': 116,
        'zoom': 0},
                       loc('gfx/collision_responsive.py'): {'attrib-starts': [('CollisionResponsive|0|',
        6),
        ('CollisionResponsive|0|.bbox_collision_response|0|',
         14)],
        'code-line': '        self._bboxCollisionResponse()\r\n',
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 426,
        'selection_end': 463,
        'selection_start': 463,
        'zoom': 0},
                       loc('gfx/color_fillable.py'): {'attrib-starts': [],
        'code-line': 'from dialog.color_dialog import ColorDialog\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 132,
        'selection_end': 144,
        'selection_start': 144,
        'zoom': 0},
                       loc('gfx/container.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 74,
        'selection_end': 74,
        'selection_start': 74,
        'zoom': 0},
                       loc('gfx/control_point.py'): {'attrib-starts': [('ControlPoint|0|',
        10),
        ('ControlPoint|0|.setPos|0|',
         99)],
        'code-line': '        if pos != self.pos():\r\n',
        'first-line': 81,
        'folded-linenos': [],
        'sel-line': 100,
        'sel-line-start': 3603,
        'selection_end': 3603,
        'selection_start': 3603,
        'zoom': 0},
                       loc('gfx/diagram_listing.py'): {'attrib-starts': [('DiagramListing|0|',
        9),
        ('DiagramListing|0|.__init__|0|',
         13)],
        'code-line': '      diagram_view.tab_name_changed.connect(self.diagramTitleLabel.setText)\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 923,
        'selection_end': 998,
        'selection_start': 997,
        'zoom': 0},
                       loc('gfx/external_link_listing.py'): {'attrib-starts': [('ExternalLinkListing|0|',
        5),
        ('ExternalLinkListing|0|.set_link_text|0|',
         19)],
        'code-line': '      self._linkText = text\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 866,
        'selection_end': 893,
        'selection_start': 893,
        'zoom': 0},
                       loc('gfx/graphics_shape.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtCore import Qt, QRectF, pyqtSignal\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 137,
        'selection_end': 137,
        'selection_start': 137,
        'zoom': 0},
                       loc('gfx/language_canvas.py'): {'attrib-starts': [('LanguageCanvas|0|',
        22),
        ('LanguageCanvas|0|.dropEvent|0|',
         359)],
        'code-line': '        from core.undo_cmd import DropItems\n',
        'first-line': 381,
        'folded-linenos': [],
        'sel-line': 365,
        'sel-line-start': 16875,
        'selection_end': 16893,
        'selection_start': 16893,
        'zoom': 0},
                       loc('gfx/language_gfx_view.py'): {'attrib-starts': [('LanguageGfxView|0|',
        10),
        ('LanguageGfxView|0|.set_tab_name|0|',
         60)],
        'code-line': '            self.tab_name_changed.emit(name)        \r\n',
        'first-line': 49,
        'folded-linenos': [],
        'sel-line': 63,
        'sel-line-start': 2113,
        'selection_end': 2157,
        'selection_start': 2157,
        'zoom': 0},
                       loc('gfx/language_listing.py'): {'attrib-starts': [('LanguageListing|0|',
        3),
        ('LanguageListing|0|.language_purpose|0|',
         15)],
        'code-line': '   ',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 478,
        'selection_end': 481,
        'selection_start': 481,
        'zoom': 0},
                       loc('gfx/language_view.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('gfx/linkable.py'): {'attrib-starts': [('Linkable|0|',
        4),
        ('Linkable|0|.user_navigates_to_link|0|',
         20)],
        'code-line': '        QApplication.instance().set_link_requester(linkable=self)\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 713,
        'selection_end': 763,
        'selection_start': 763,
        'zoom': 0},
                       loc('gfx/logical_rule_listing.py'): {'attrib-starts': [],
        'code-line': 'from ui.ui_logical_rule_listing import Ui_LogicalRuleListing\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('gfx/logical_rule_view.py'): {'attrib-starts': [('LogicalRuleView|0|',
        9),
        ('LogicalRuleView|0|._getListingWidget|0|',
         112)],
        'code-line': '      readonly_view.remove_requested.connect(lambda: self.remove_listing(readonly_view))\r\n',
        'first-line': 114,
        'folded-linenos': [],
        'sel-line': 124,
        'sel-line-start': 4640,
        'selection_end': 4640,
        'selection_start': 4640,
        'zoom': 0},
                       loc('gfx/object.py'): {'attrib-starts': [],
        'code-line': 'from gfx.containable import Containable\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 389,
        'selection_end': 397,
        'selection_start': 397,
        'zoom': 0},
                       loc('gfx/proof_step.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 396,
        'selection_end': 396,
        'selection_start': 396,
        'zoom': 0},
                       loc('gfx/proof_view.py'): {'attrib-starts': [('ProofView|0|',
        5),
        ('ProofView|0|.remove_proof_step|0|',
         43)],
        'code-line': '      proof_step.remove_requested.disconnect()\r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 46,
        'sel-line-start': 1647,
        'selection_end': 1693,
        'selection_start': 1693,
        'zoom': 0},
                       loc('gfx/read_only_language_gfx_view.py'): {'attrib-starts': [('ReadOnlyLanguageGfxView|0|',
        3),
        ('ReadOnlyLanguageGfxView|0|.__init__|0|',
         4)],
        'code-line': '      self.setMinimumWidth(0)      \r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 296,
        'selection_end': 325,
        'selection_start': 325,
        'zoom': 0},
                       loc('gfx/text.py'): {'attrib-starts': [('Text|0|',
        14),
        ('Text|0|.mouseDoubleClickEvent|0|',
         82)],
        'code-line': '            self.setPlainText(self._html)            \r\n',
        'first-line': 135,
        'folded-linenos': [],
        'sel-line': 87,
        'sel-line-start': 3740,
        'selection_end': 3780,
        'selection_start': 3780,
        'zoom': 0},
                       loc('gfx/view.py'): {'attrib-starts': [],
        'code-line': 'from core.drop_undo import DropUndo\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 283,
        'selection_end': 292,
        'selection_start': 292,
        'zoom': 0},
                       loc('graphics_shape.py'): {'attrib-starts': [],
        'code-line': 'from qt_tools import Pen, simple_max_contrasting_color, set_pen_style, set_pen_color\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('kernel.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lang/networkx_tools.py'): {'attrib-starts': [('networkx_labels|0|',
        113)],
        'code-line': '    labels = [VariableTemplateRegex(t.toHtml(), var_index) for t in filter(lambda c: isinstance(c, Text), item.childItems())]\r\n',
        'first-line': 84,
        'folded-linenos': [],
        'sel-line': 115,
        'sel-line-start': 3235,
        'selection_end': 3235,
        'selection_start': 3235,
        'zoom': 0},
                       loc('lang/tools.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 141,
        'selection_end': 141,
        'selection_start': 141,
        'zoom': 0},
                       loc('language_canvas.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtWidgets import QGraphicsScene, QUndoStack, QApplication, QMenu\n',
        'first-line': 201,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('language_view.py'): {'attrib-starts': [('LanguageView|0|',
        10)],
        'code-line': '    def wheelEvent(self, event):\r\n',
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 116,
        'sel-line-start': 3881,
        'selection_end': 3913,
        'selection_start': 3913,
        'zoom': 0},
                       loc('linkable.py'): {'attrib-starts': [('Linkable|0|',
        3),
        ('Linkable|0|.open_link|0|',
         22)],
        'code-line': '         self.open_link_requested.emit(self._fullpathLink)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 650,
        'selection_end': 668,
        'selection_start': 668,
        'zoom': 0},
                       loc('prime_explorer.py'): {'attrib-starts': [],
        'code-line': '                        ',
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 553,
        'selection_end': 577,
        'selection_start': 577,
        'zoom': 0},
                       loc('prime_twins.py'): {'attrib-starts': [('g|0|',
        7)],
        'code-line': '   return primepi_c(x) - primepi_c()',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 105,
        'selection_end': 140,
        'selection_start': 140,
        'zoom': 0},
                       loc('qt_tools.py'): {'attrib-starts': [('first_ancestor_of_type|1|',
        554)],
        'code-line': '        return first_ancestor_of_type(type, item.parentItem())\n',
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 558,
        'sel-line-start': 17680,
        'selection_end': 17700,
        'selection_start': 17695,
        'zoom': 0},
                       loc('requirements.txt'): {'attrib-starts': [],
        'code-line': 'PyQt5\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('text.py'): {'attrib-starts': [('Text|0|',
        13),
        ('Text|0|.parse_user_text|0|',
         209)],
        'code-line': '                scene.proof_engine.parse_user_text(text=self)\r\n',
        'first-line': 184,
        'folded-linenos': [],
        'sel-line': 213,
        'sel-line-start': 8513,
        'selection_end': 8574,
        'selection_start': 8574,
        'zoom': 0},
                       loc('tree_widget.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtWidgets import QTreeWidget, QTreeWidgetItem\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('trie.py'): {'attrib-starts': [('Trie|0|',
        12),
        ('Trie|0|.insert|0|',
         36)],
        'code-line': '    def insert(self, string: str, value=None) -> None:\r\n',
        'first-line': 46,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1035,
        'selection_end': 1079,
        'selection_start': 1079,
        'zoom': 0},
                       loc('twin_primes.py'): {'attrib-starts': [],
        'code-line': '   assert isprime(S) or S == 1',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 231,
        'selection_end': 231,
        'selection_start': 231,
        'zoom': 0},
                       loc('ui_edit_text_dockwidget.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('variable_template_regex.py'): {'attrib-starts': [('VariableTemplateRegex|0|',
        3),
        ('VariableTemplateRegex|0|.__init__|0|',
         8)],
        'code-line': '            for var_match in self._variableRegex.finditer(string[i:start]):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 417,
        'selection_end': 474,
        'selection_start': 474,
        'zoom': 7},
                       loc('widget/debug_watch_widget.py'): {'attrib-starts': [],
        'code-line': 'class DebugWatchWidget(QWidget, Ui_DebugWatchWidget):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 360,
        'selection_end': 413,
        'selection_start': 413,
        'zoom': 0},
                       loc('widget/debug_widget.py'): {'attrib-starts': [],
        'code-line': 'from widget.debug_watch_widget import DebugWatchWidget\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 82,
        'selection_end': 92,
        'selection_start': 92,
        'zoom': 0},
                       loc('widget/edit_text_dockwidget.py'): {'attrib-starts': [('EditTextDockWidget|0|',
        13),
        ('EditTextDockWidget|0|.set_selected_text_items|0|',
         33)],
        'code-line': '            view = window.current_language_view()\r\n',
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1744,
        'selection_end': 1793,
        'selection_start': 1793,
        'zoom': 0},
                       loc('widget/edit_text_widget.py'): {'attrib-starts': [],
        'code-line': 'class _EditTextWidget(QWidget, Ui_EditTextWidget):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 93,
        'selection_end': 100,
        'selection_start': 100,
        'zoom': 0},
                       loc('widget/file_system_tree_view.py'): {'attrib-starts': [],
        'code-line': 'from core.checkable_file_system_model import CheckableFileSystemModel\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 150,
        'selection_end': 160,
        'selection_start': 160,
        'zoom': 0},
                       loc('widget/language_view_tabs.py'): {'attrib-starts': [('LanguageViewTabs|0|',
        7),
        ('LanguageViewTabs|0|.show_tab_rename_dialog|0|',
         11)],
        'code-line': '            name = dialog.nameLineEdit.text()\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 620,
        'selection_end': 665,
        'selection_start': 665,
        'zoom': 0},
                       loc('widget/library_search_dockwidget.py'): {'attrib-starts': [],
        'code-line': 'from gfx.arrow import Arrow\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 413,
        'selection_end': 422,
        'selection_start': 422,
        'zoom': 0},
                       loc('widget/proof_widget.py'): {'attrib-starts': [('ProofWidget|0|',
        3),
        ('ProofWidget|0|.__init__|0|',
         4)],
        'code-line': '      self.layout().addWidget(self._proofTabs)',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 265,
        'selection_end': 311,
        'selection_start': 311,
        'zoom': 0},
                       loc('widget/tab_widget.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtWidgets import QTabWidget, QMenu, QApplication\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         'cmd-yXwKadMqJEw4soXr')}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('custom',
                      'c:\\Python38\\python.exe')}
proj.script-attribs = {'django.django-admin': 'C:\\Python39\\Scripts\\django-admin.py',
                       'django.django-parent-directory': 'c:\\Users\\fruitfulapproach\\Desktop\\abstract-spacecraft\\',
                       'django.django-superuser': 'EnjoysMath',
                       'django.django-superuser-email': 'enjoysmath@gmail.com'}
proj.vcs-system-config = ('prefs',
                          {'cvs': {'versioncontrol.cvs.active': 'active-if-project-dir',
                                   'versioncontrol.cvs.executable': 'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-z3'},
                           'git': {'versioncontrol.git.active': 'active-if-project-dir',
                                   'versioncontrol.git.executable': 'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-project-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': 'hg',
                                  'versioncontrol.hg.extra-global-args': '--encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'not-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': 'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-project-dir',
                                   'versioncontrol.svn.executable': 'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': 'svnadmin'}})
search.search-history = ['self._html = None',
                         '_selectionPath',
                         '_selection',
                         'setSceneRect',
                         '.addItem',
                         '.a',
                         'update_connectors',
                         'snap',
                         'update_conne',
                         'update_connetors',
                         'u',
                         '__getstate__',
                         'closest',
                         'closes',
                         'place_arrow_mode',
                         'first',
                         'dialog',
                         'diaglo']
testing.stored-results = (1,
                          [],
                          {})
